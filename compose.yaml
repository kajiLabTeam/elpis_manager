services:
  proxy:
    image: golang:1.22.5-bookworm
    ports:
      - 8080:8080
    volumes:
      - ./proxy:/app
      - /etc/localtime:/etc/localtime:ro
    working_dir: /app
    depends_on:
      postgres_proxy:
        condition: service_healthy
    command: go run ./cmd/server.go
    environment:
      - TZ=Asia/Tokyo

  manager:
    image: golang:1.22.5-bookworm
    ports:
      - 8010:8010
    volumes:
      - ./manager:/app
      - /etc/localtime:/etc/localtime:ro
    working_dir: /app
    depends_on:
      proxy:
        condition: service_started
      postgres_manager:
        condition: service_healthy
    command: go run ./cmd/server.go
    environment:
      - TZ=Asia/Tokyo

  postgres_manager:
    image: postgres:16.3-bookworm
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: managerdb
      TZ: Asia/Tokyo
    ports:
      - 5433:5432
    volumes:
      - ./manager/init.sql:/docker-entrypoint-initdb.d/init.sql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d managerdb"]
      interval: 15s
      retries: 10

  postgres_proxy:
    image: postgres:16.3-bookworm
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: proxydb
      TZ: Asia/Tokyo
    ports:
      - 5434:5432
    volumes:
      - ./proxy/init.sql:/docker-entrypoint-initdb.d/init.sql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d proxydb"]
      interval: 15s
      retries: 10

  vite-app:
    image: node:22-bookworm-slim
    volumes:
      - ./web:/app
      - /app/node_modules
      - /etc/localtime:/etc/localtime:ro
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    ports:
      - '5173:5173'
    environment:
      - TZ=Asia/Tokyo

networks:
  elpis_network:
    external: true

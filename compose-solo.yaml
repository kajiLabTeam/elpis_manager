services:
  manager:
    image: golang:1.22.5-bookworm
    ports:
      - 8010:8010
    volumes:
      - ./solo:/app
      - /etc/localtime:/etc/localtime:ro
    working_dir: /app
    depends_on:
      postgres_manager:
        condition: service_healthy
    command: go run ./cmd/server.go
    environment:
      - TZ=Asia/Tokyo

  manager_estimation-model:
    image: python:3.12.7-bookworm
    working_dir: /app
    volumes:
      - ./solo_estimation:/app
      - ./solo_estimation/requirements.lock:/app/requirements.lock
      - ./solo/manager_fingerprint:/app/manager_fingerprint
    environment:
      - TZ=Asia/Tokyo
    command: >
      /bin/sh -c "pip install uv && pip install --no-cache-dir -r requirements.lock && python ./src/estimation/main.py"
    ports:
      - "8200:8000"

  manager_classification-model:
    image: python:3.12.7-bookworm
    working_dir: /app
    volumes:
      - ./solo_estimation:/app
      - ./solo_estimation/requirements.lock:/app/requirements.lock
      - ./solo/manager_fingerprint:/app/manager_fingerprint
    environment:
      - TZ=Asia/Tokyo
    command: >
      /bin/sh -c "pip install uv && pip install --no-cache-dir -r requirements.lock && python ./src/estimation/classification.py"
    ports:
      - "8300:8000"

  manager_estimation-api:
    image: python:3.12.7-bookworm
    working_dir: /app
    volumes:
      - ./solo_estimation:/app
      - ./solo_estimation/requirements.lock:/app/requirements.lock
      - ./solo/manager_fingerprint:/app/manager_fingerprint
    environment:
      - TZ=Asia/Tokyo
    command: >
      /bin/sh -c "pip install uv && pip install --no-cache-dir -r requirements.lock && python ./src/estimation/app.py"
    ports:
      - "8101:8101"

  postgres_manager:
    image: postgres:16.3-bookworm
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: managerdb
      TZ: Asia/Tokyo
    ports:
      - 5433:5432
    volumes:
      - ./manager/init.sql:/docker-entrypoint-initdb.d/init.sql
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d managerdb" ]
      interval: 20s
      retries: 10

  manager_web:
    image: node:22-bookworm-slim
    volumes:
      - ./manager_web:/app
      - /app/node_modules
      - /etc/localtime:/etc/localtime:ro
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    ports:
      - '5173:5173'
    environment:
      - TZ=Asia/Tokyo


networks:
  elpis_network:
    external: true
